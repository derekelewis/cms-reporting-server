/*
 * Copyright (C) Projective Software LLC, 2017 - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 */

buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.bmuschko:gradle-docker-plugin:3.2.9')
        classpath('net.sf.jasperreports:jasperreports:6.4.1')
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.5.1"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.docker-remote-api'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

//repositories {
//    mavenCentral()
//    maven { url "http://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts" }
//}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-batch')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.flywaydb:flyway-core')
    compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.10'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.4.1'
    compile group: 'net.sf.jasperreports', name: 'jasperreports-fonts', version: '6.0.0'
    compile group: 'com.oracle.database.jdbc', name: 'ojdbc8-production', version: '21.1.0.0'
    runtime('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.batch:spring-batch-test')
}

idea {
    project {
        languageLevel = '1.8'
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task compileJasperReports {
    def jasperSourceDir = file('src/main/jasperreports')
    doLast {
        ant.taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.jasperreports.asPath)
        ant.jrc(srcdir: jasperSourceDir, destdir: sourceSets.main.output.getClassesDirs().asPath) {
            classpath(path: sourceSets.main.output.getClassesDirs().asPath)
            include(name: '**/*.jrxml')
        }
    }
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/docker/Dockerfile')
    from 'openjdk:10-jre'
    copyFile jar.archiveName, '/' + jar.archiveName
    entryPoint 'sh', '-c', 'java ${JAVA_OPTS} --add-modules java.se.ee -jar /' + jar.archiveName
}

task syncJarFile(type: Sync) {
    dependsOn assemble
    from jar.archivePath
    into createDockerfile.destFile.parentFile
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = 'projective-software/' + "ps-" + jar.baseName + ':latest'
}

createDockerfile.dependsOn(syncJarFile)
buildImage.dependsOn(syncJarFile)